# Build the Go Binary.
FROM golang:1.24 AS build_gus
ENV CGO_ENABLED=0
ARG BUILD_REF

# Create the service directory and the copy the module files first and then
# download the dependencies. If this doesn't change, we won't need to do this
# again in future builds.
RUN mkdir /service
COPY go.* /service/
WORKDIR /service
RUN go mod download

# Copy the source code into the container.
COPY . /service

# Build the admin binary.
WORKDIR /service/api/tooling/admin
RUN go build -ldflags "-X main.build=${BUILD_REF}"

# Build the service binary.
WORKDIR /service/api/services/gus
RUN go build -ldflags "-X main.build=${BUILD_REF}"


# Run the Go Binary in Alpine.
FROM alpine:3.21
ARG BUILD_DATE
ARG BUILD_REF
RUN addgroup -g 1000 -S gus && \
    adduser -u 1000 -h /service -G gus -S gus
COPY --from=build_gus --chown=gus:gus /service/api/tooling/admin/admin /service/admin
COPY --from=build_gus --chown=gus:gus /service/api/services/gus/gus /service/gus
WORKDIR /service
USER gus
CMD ["./gus"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="gus-api" \
      org.opencontainers.image.authors="William Kennedy <bill@ardanlabs.com>" \
      org.opencontainers.image.source="https://github.com/ardanlabs/service/tree/master/a/services/gus" \
      org.opencontainers.image.revision="${BUILD_REF}" \
      org.opencontainers.image.vendor="Ardan Labs"
